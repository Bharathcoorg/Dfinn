
//! Autogenerated weights for `finn_migration`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2021-09-26, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 128

// Executed Command:
// ./target/release/dfinn-node
// benchmark
// --chain
// dev
// --execution
// wasm
// --wasm-execution
// compiled
// --pallet=finn_migration
// --extrinsic=*
// --steps
// 50
// --repeat
// 20
// --output=benchout/finn_migration.rs


#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for finn_migration.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> finn_migration::WeightInfo for WeightInfo<T> {
	// Storage: FINNMigration Operational (r:0 w:1)
	fn set_migration_operational_status() -> Weight {
		(1_727_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: FINNMigration Relayers (r:0 w:1)
	fn set_relayer_status() -> Weight {
		(13_231_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: FINNMigration Operational (r:1 w:0)
	// Storage: FINNMigration EthTxns (r:1 w:1)
	// Storage: FINNMigration Relayers (r:1 w:0)
	// Storage: FINNMigration MintableTokens (r:1 w:1)
	// Storage: Balances Locks (r:1 w:1)
	// Storage: FINNMigration LockedTokenHolders (r:0 w:1)
	fn mint() -> Weight {
		(69_169_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	// Storage: FINNMigration Operational (r:1 w:0)
	// Storage: FINNMigration LockedTokenHolders (r:1 w:1)
	// Storage: Balances Locks (r:1 w:1)
	fn unlock() -> Weight {
		(28_553_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: FINNMigration LockedTokenHolders (r:1 w:1)
	// Storage: Balances Locks (r:1 w:1)
	// Storage: FINNMigration MintableTokens (r:1 w:1)
	fn remove_minted_tokens() -> Weight {
		(54_981_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
}
